# Supported transaction types
# 0  = DeployModule
# 1  = InitContract
# 2  = Update
# 3  = Transfer
# 4  = AddBaker
# 5  = RemoveBaker
# 6  = UpdateBakerStake
# 7  = UpdateBakerRestakeEarnings
# 8  = UpdateBakerKeys
# 9  = UpdateCredentialKeys
# 10 = EncryptedAmountTransfer
# 11 = TransferToEncrypted
# 12 = TransferToPublic
# 13 = TransferWithSchedule
# 14 = UpdateCredentials
# 15 = RegisterData
# 16 = TransferWithMemo
# 17 = EncryptedAmountTransferWithMemo
# 18 = TransferWithScheduleAndMemo
# 19 = ConfigureBaker
# 20 = ConfigureDelegation

# Supported standard ID's
# "CIS2"

tracked_accounts = "Selected" # Optional (default "Selected"). Options: "All" | "Selected".
tracked_transactions = "All" # Optional (default "All"). Options: "All" |  { Selected [<tx_type_1>, ...] } |  "None". Used as default for [[accounts]].transactions. Transaction types assumed to be integers corresponding to "Supported transaction types".
tracked_contracts = "Selected" # Optional (default "Selected"). Options: "All" |  "Selected". "All" means parse all events if schema is available, no standard (`[[contracts]].standard`) interpretations for all contracts.
# track_from = { Date [<date>] } |  { Height [<integer>] } |  { BlockHash [<hex_string>] } # Optional. If not specified, the service will attempt to determine a sensible starting point based on the configuration.

# list of accounts to track (when `tracked_accounts = "Selected"`)
# [[accounts]]
# address = <base58 string> # Required
# transactions = "All" | { Selected [<tx_type_1>, ...] } | "None" # Optional. Defaults to value of `tracked_transactions`. Options: same as `tracked_transactions`.

# list of contracts to track (when `tracked_contracts = "Selected"`)
# [[contracts]]
# index = <integer> # Required
# subindex = <integer> # Optional (default 0).
# schema = <base64 string> # Optional. If not specified, the service will attempt to get the schema from the chain.
# events = [<ev_name_1>, ...] # Optional. Defaults to all tracking all events. Event names must equal event names from contract. Can only be used if `schema` is either explicitly defined or available on chain.
# standards = [<std_id_1>, ...] # Optional. Standard ID's assumed to be strings corresponding to "Supported standard ID's".
